/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package inheritance;

import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

class LibraryTest {
    @Test void someLibraryMethodReturnsTrue() {
        Library classUnderTest = new Library();
        assertTrue(classUnderTest.someLibraryMethod(), "someLibraryMethod should return 'true'");
    }

    @Test
    public void resturantTest() {
        Restaurant testResturantt=new Restaurant("kabab",5,10);


        assertEquals("kabab{name='kabab', stars=5, price=10}",testResturantt.toString());
    }

    @Test
    public void reviewTest() {
        Review testReviw=new Review("Mohammed","good",5);
        assertEquals("Review{author='Mohammed', body='good', numOfstars=5}",testReviw.toString());
    }

    @Test
    public void addReviewTest() {
        Restaurant ward=new Restaurant("ward",5,20);
        ward.addReview("Mohammed","good",5);
        assertEquals(1,ward.listreview.size());
    }

    @Test
    public void starratingTest() {
        Restaurant macdonalds=new Restaurant("macdonalds",2,5);
        macdonalds.addReview("Mohammed","good",5);
        macdonalds.addReview("Ahmed","good",0);
        macdonalds.addReview("Yousef","bad",4);
        assertEquals(3,macdonalds.stars);
    }

    // Shop test

    @Test
    public void shoptest() {
        //add resturanttest
        Shop macdonalds=new Shop("macdonalds",2,5);
        assertEquals("macdonalds",macdonalds.name);
        //reviewtest
        macdonalds.addReview("Mohammed","good",5);
        assertEquals(1,macdonalds.listreview.size());
        //to string test
        String testTostring="macdonalds{name='macdonalds', stars=5, price=5}Review{author='Mohammed', body='good', numOfstars=5}";
        assertEquals(testTostring,macdonalds.toString());

        macdonalds.addReview("Ahmed","good",0);
        macdonalds.addReview("Yousef","bad",4);
        assertEquals(3,macdonalds.stars);
    }

    @Test
    public void theatertest() {
        //add theater
        Theater cienema=new Theater("cienema");

        assertEquals("cienema",cienema.name);
        //addreviewwith name of movie
        cienema.addReview("mohammed mosleh","its good cienema",4,"shawshankredumption");
        assertEquals(1,cienema.listreview.size());
        //add and remove movie
        cienema.addMovie("ghabi mino fih");
        boolean includemovie=cienema.allMovies.contains("ghabi mino fih");
        assertEquals(true,includemovie);
        cienema.removeMovie("ghabi mino fih");
        boolean notincludemovie=cienema.allMovies.contains("ghabi mino fih");
        assertEquals(false,notincludemovie);
        //tostring test

        System.out.println(cienema.toString());
        String testTostrig="cienema{name='cienema'}Review{author='mohammed mosleh', body='its good cienema', numOfstars=4}shawshankredumption";
        assertEquals(testTostrig,cienema.toString());


    }





}
